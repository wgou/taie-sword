plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.example.accessserver'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.accessserver"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'arm64-v8a'/*, 'armeabi-v7a', 'x86', 'x86_64'*/
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
}

//sourceSets{
//    main{
//        java.srcDirs("/Users/txt/AndroidStudioProjects/AccessServer/aslib/src/main/java")
//
//        resources.srcDir("/Users/txt/AndroidStudioProjects/AccessServer/aslib/src")
//    }
//}

def rustProjectDir = file("../rust_jni")
def jniLibsDir = file("src/main/jniLibs")


task buildRustAarch64(type: Exec) {
    workingDir rustProjectDir
    // 设置环境变量
    commandLine '/Users/txt/.cargo/bin/cargo', 'build', '--target', 'aarch64-linux-android', '--release'
}

task copyRustLibs(type: Copy) {
    dependsOn buildRustAarch64/*, buildRustArmv7, buildRustX86, buildRustX86_64*/

    // 确保目标目录存在
    doFirst {
        jniLibsDir.mkdirs()
        file("$jniLibsDir/arm64-v8a").mkdirs()
//        file("$jniLibsDir/armeabi-v7a").mkdirs()
//        file("$jniLibsDir/x86").mkdirs()
//        file("$jniLibsDir/x86_64").mkdirs()
    }

    // 复制各个架构的 SO 文件
    from("$rustProjectDir/target/aarch64-linux-android/release/librust_jni.so") {
        into "arm64-v8a"
    }
//    from("$rustProjectDir/target/armv7-linux-androideabi/release/librust_jni.so") {
//        into "armeabi-v7a"
//    }
//    from("$rustProjectDir/target/i686-linux-android/release/librust_jni.so") {
//        into "x86"
//    }
//    from("$rustProjectDir/target/x86_64-linux-android/release/librust_jni.so") {
//        into "x86_64"
//    }

    into jniLibsDir
}
//TODO 取消jni依赖
//preBuild.dependsOn copyRustLibs


dependencies {
    implementation project(path: ':aslib')
    implementation 'com.blankj:utilcodex:1.31.0'
    implementation(files("libs/android_keeplive.aar"))
//    implementation project(path: ':aslib')
    implementation libs.work.runtime
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    
    // Rhino JavaScript引擎
    implementation 'org.mozilla:rhino:1.7.13'

    
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}